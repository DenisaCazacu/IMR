//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/Samples/XR Interaction Toolkit/2.6.5/XR Device Simulator/XR Device Controller Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/Samples/XR Interaction Toolkit/2.6.5/XR Device Simulator/XR Device Controller Controls.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @XRDeviceControllerControls: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @XRDeviceControllerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""XR Device Controller Controls"",
    ""maps"": [
        {
            ""name"": ""Controller"",
            ""id"": ""11c7c072-283e-4c4f-969d-bea4cb0809cf"",
            ""actions"": [
                {
                    ""name"": ""Axis 2D"",
                    ""type"": ""Value"",
                    ""id"": ""76f4cfaf-5aeb-4f66-87d2-a63aa567764a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Resting Hand Axis 2D"",
                    ""type"": ""Value"",
                    ""id"": ""42778bc8-d1b8-438d-9618-e41a28b3dc56"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Button"",
                    ""id"": ""c7937c78-cea4-4888-8feb-8d9da13005f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""3808b2c1-2f77-4a89-bc2a-34c0e0ef0ad3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary Button"",
                    ""type"": ""Button"",
                    ""id"": ""54068f2e-4569-46ab-9864-63b23fb9c26a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Button"",
                    ""type"": ""Button"",
                    ""id"": ""970b4191-957d-4a7f-ba64-e0e701950d99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""ccb35b49-777b-460f-bca8-3168c41cc779"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary 2D Axis Click"",
                    ""type"": ""Button"",
                    ""id"": ""22416e35-4897-43a8-b712-74381678af80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary 2D Axis Click"",
                    ""type"": ""Button"",
                    ""id"": ""b3a541b3-564a-4213-8a9a-a4417b3de5cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary 2D Axis Touch"",
                    ""type"": ""Button"",
                    ""id"": ""9b069098-df41-435e-9a59-ce43682df020"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary 2D Axis Touch"",
                    ""type"": ""Button"",
                    ""id"": ""cf4b67af-47c4-43d7-b748-b69c7709d64b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Primary Touch"",
                    ""type"": ""Button"",
                    ""id"": ""04a0ca31-1719-49b1-9e4c-bc95a9905486"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Touch"",
                    ""type"": ""Button"",
                    ""id"": ""613de0bf-5bc1-4b53-a4b8-0ae20fb87272"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""094bdcd9-42d3-4b66-8bf7-69d931e4af25"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis 2D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1b2e98a9-b6d7-45bf-b4cc-d679acb0502a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""597b5587-05e8-4ffc-a928-539ab9f8d947"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""87590669-a188-4b8b-ba41-f5f8a58cede9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6e1f0a95-84c0-4e06-98b8-18728329aa43"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""df76e063-0f58-453c-9bdb-a000e261868d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6be1edad-fb89-4f8b-8041-8a539b9aa22e"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""387c7efc-30f2-423a-a537-9a8b6e7d7860"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e1b7cebf-9197-42dd-91a0-6ec9bfa15f9f"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3c625ee8-b7f9-4125-917a-f05eab326a3e"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4f579817-5f31-4ac7-899b-04fec58abb48"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""20ac1683-e9a0-4cea-ac68-6689033459df"",
                    ""path"": ""<Mouse>/forwardButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""60663e10-c213-4c1a-9177-68680f497799"",
                    ""path"": ""<Mouse>/backButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cca7347a-79f9-4a90-9912-627c7aeb7509"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7a178081-4cf4-4dc4-ae08-3448a76351e6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resting Hand Axis 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""32072c42-6a30-4383-8362-d65ff475c920"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f6dfc4a-38d9-455d-9364-3a188b0e9326"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c17eb846-7a66-4006-9d57-6b91831868d0"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69ce3e33-7d81-423f-b162-7232a5791c2f"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45511393-aa9b-4031-8e31-4eec53ab2d3f"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e2bc8db-cb64-45ae-967f-55e716a538ba"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary 2D Axis Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37235877-ac7c-41c4-bc1b-b03be3563189"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary 2D Axis Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff1581e6-f183-439b-8980-ad03b5a01e60"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary 2D Axis Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""325ec093-e834-4551-9b8f-4a3311ed737e"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary 2D Axis Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5f47d18-df5a-4dcd-a20a-c1130b0d4541"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab5101fb-5323-4b55-9fe7-e6c377cf7d82"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Secondary Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controller
        m_Controller = asset.FindActionMap("Controller", throwIfNotFound: true);
        m_Controller_Axis2D = m_Controller.FindAction("Axis 2D", throwIfNotFound: true);
        m_Controller_RestingHandAxis2D = m_Controller.FindAction("Resting Hand Axis 2D", throwIfNotFound: true);
        m_Controller_Grip = m_Controller.FindAction("Grip", throwIfNotFound: true);
        m_Controller_Trigger = m_Controller.FindAction("Trigger", throwIfNotFound: true);
        m_Controller_PrimaryButton = m_Controller.FindAction("Primary Button", throwIfNotFound: true);
        m_Controller_SecondaryButton = m_Controller.FindAction("Secondary Button", throwIfNotFound: true);
        m_Controller_Menu = m_Controller.FindAction("Menu", throwIfNotFound: true);
        m_Controller_Primary2DAxisClick = m_Controller.FindAction("Primary 2D Axis Click", throwIfNotFound: true);
        m_Controller_Secondary2DAxisClick = m_Controller.FindAction("Secondary 2D Axis Click", throwIfNotFound: true);
        m_Controller_Primary2DAxisTouch = m_Controller.FindAction("Primary 2D Axis Touch", throwIfNotFound: true);
        m_Controller_Secondary2DAxisTouch = m_Controller.FindAction("Secondary 2D Axis Touch", throwIfNotFound: true);
        m_Controller_PrimaryTouch = m_Controller.FindAction("Primary Touch", throwIfNotFound: true);
        m_Controller_SecondaryTouch = m_Controller.FindAction("Secondary Touch", throwIfNotFound: true);
    }

    ~@XRDeviceControllerControls()
    {
        UnityEngine.Debug.Assert(!m_Controller.enabled, "This will cause a leak and performance issues, XRDeviceControllerControls.Controller.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controller
    private readonly InputActionMap m_Controller;
    private List<IControllerActions> m_ControllerActionsCallbackInterfaces = new List<IControllerActions>();
    private readonly InputAction m_Controller_Axis2D;
    private readonly InputAction m_Controller_RestingHandAxis2D;
    private readonly InputAction m_Controller_Grip;
    private readonly InputAction m_Controller_Trigger;
    private readonly InputAction m_Controller_PrimaryButton;
    private readonly InputAction m_Controller_SecondaryButton;
    private readonly InputAction m_Controller_Menu;
    private readonly InputAction m_Controller_Primary2DAxisClick;
    private readonly InputAction m_Controller_Secondary2DAxisClick;
    private readonly InputAction m_Controller_Primary2DAxisTouch;
    private readonly InputAction m_Controller_Secondary2DAxisTouch;
    private readonly InputAction m_Controller_PrimaryTouch;
    private readonly InputAction m_Controller_SecondaryTouch;
    /// <summary>
    /// Provides access to input actions defined in input action map "Controller".
    /// </summary>
    public struct ControllerActions
    {
        private @XRDeviceControllerControls m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public ControllerActions(@XRDeviceControllerControls wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Controller/Axis2D".
        /// </summary>
        public InputAction @Axis2D => m_Wrapper.m_Controller_Axis2D;
        /// <summary>
        /// Provides access to the underlying input action "Controller/RestingHandAxis2D".
        /// </summary>
        public InputAction @RestingHandAxis2D => m_Wrapper.m_Controller_RestingHandAxis2D;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Grip".
        /// </summary>
        public InputAction @Grip => m_Wrapper.m_Controller_Grip;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Trigger".
        /// </summary>
        public InputAction @Trigger => m_Wrapper.m_Controller_Trigger;
        /// <summary>
        /// Provides access to the underlying input action "Controller/PrimaryButton".
        /// </summary>
        public InputAction @PrimaryButton => m_Wrapper.m_Controller_PrimaryButton;
        /// <summary>
        /// Provides access to the underlying input action "Controller/SecondaryButton".
        /// </summary>
        public InputAction @SecondaryButton => m_Wrapper.m_Controller_SecondaryButton;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Menu".
        /// </summary>
        public InputAction @Menu => m_Wrapper.m_Controller_Menu;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Primary2DAxisClick".
        /// </summary>
        public InputAction @Primary2DAxisClick => m_Wrapper.m_Controller_Primary2DAxisClick;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Secondary2DAxisClick".
        /// </summary>
        public InputAction @Secondary2DAxisClick => m_Wrapper.m_Controller_Secondary2DAxisClick;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Primary2DAxisTouch".
        /// </summary>
        public InputAction @Primary2DAxisTouch => m_Wrapper.m_Controller_Primary2DAxisTouch;
        /// <summary>
        /// Provides access to the underlying input action "Controller/Secondary2DAxisTouch".
        /// </summary>
        public InputAction @Secondary2DAxisTouch => m_Wrapper.m_Controller_Secondary2DAxisTouch;
        /// <summary>
        /// Provides access to the underlying input action "Controller/PrimaryTouch".
        /// </summary>
        public InputAction @PrimaryTouch => m_Wrapper.m_Controller_PrimaryTouch;
        /// <summary>
        /// Provides access to the underlying input action "Controller/SecondaryTouch".
        /// </summary>
        public InputAction @SecondaryTouch => m_Wrapper.m_Controller_SecondaryTouch;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Controller; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="ControllerActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(ControllerActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="ControllerActions" />
        public void AddCallbacks(IControllerActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllerActionsCallbackInterfaces.Add(instance);
            @Axis2D.started += instance.OnAxis2D;
            @Axis2D.performed += instance.OnAxis2D;
            @Axis2D.canceled += instance.OnAxis2D;
            @RestingHandAxis2D.started += instance.OnRestingHandAxis2D;
            @RestingHandAxis2D.performed += instance.OnRestingHandAxis2D;
            @RestingHandAxis2D.canceled += instance.OnRestingHandAxis2D;
            @Grip.started += instance.OnGrip;
            @Grip.performed += instance.OnGrip;
            @Grip.canceled += instance.OnGrip;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @PrimaryButton.started += instance.OnPrimaryButton;
            @PrimaryButton.performed += instance.OnPrimaryButton;
            @PrimaryButton.canceled += instance.OnPrimaryButton;
            @SecondaryButton.started += instance.OnSecondaryButton;
            @SecondaryButton.performed += instance.OnSecondaryButton;
            @SecondaryButton.canceled += instance.OnSecondaryButton;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Primary2DAxisClick.started += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed += instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled += instance.OnPrimary2DAxisClick;
            @Secondary2DAxisClick.started += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed += instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled += instance.OnSecondary2DAxisClick;
            @Primary2DAxisTouch.started += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed += instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled += instance.OnPrimary2DAxisTouch;
            @Secondary2DAxisTouch.started += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed += instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled += instance.OnSecondary2DAxisTouch;
            @PrimaryTouch.started += instance.OnPrimaryTouch;
            @PrimaryTouch.performed += instance.OnPrimaryTouch;
            @PrimaryTouch.canceled += instance.OnPrimaryTouch;
            @SecondaryTouch.started += instance.OnSecondaryTouch;
            @SecondaryTouch.performed += instance.OnSecondaryTouch;
            @SecondaryTouch.canceled += instance.OnSecondaryTouch;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="ControllerActions" />
        private void UnregisterCallbacks(IControllerActions instance)
        {
            @Axis2D.started -= instance.OnAxis2D;
            @Axis2D.performed -= instance.OnAxis2D;
            @Axis2D.canceled -= instance.OnAxis2D;
            @RestingHandAxis2D.started -= instance.OnRestingHandAxis2D;
            @RestingHandAxis2D.performed -= instance.OnRestingHandAxis2D;
            @RestingHandAxis2D.canceled -= instance.OnRestingHandAxis2D;
            @Grip.started -= instance.OnGrip;
            @Grip.performed -= instance.OnGrip;
            @Grip.canceled -= instance.OnGrip;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @PrimaryButton.started -= instance.OnPrimaryButton;
            @PrimaryButton.performed -= instance.OnPrimaryButton;
            @PrimaryButton.canceled -= instance.OnPrimaryButton;
            @SecondaryButton.started -= instance.OnSecondaryButton;
            @SecondaryButton.performed -= instance.OnSecondaryButton;
            @SecondaryButton.canceled -= instance.OnSecondaryButton;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Primary2DAxisClick.started -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.performed -= instance.OnPrimary2DAxisClick;
            @Primary2DAxisClick.canceled -= instance.OnPrimary2DAxisClick;
            @Secondary2DAxisClick.started -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.performed -= instance.OnSecondary2DAxisClick;
            @Secondary2DAxisClick.canceled -= instance.OnSecondary2DAxisClick;
            @Primary2DAxisTouch.started -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.performed -= instance.OnPrimary2DAxisTouch;
            @Primary2DAxisTouch.canceled -= instance.OnPrimary2DAxisTouch;
            @Secondary2DAxisTouch.started -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.performed -= instance.OnSecondary2DAxisTouch;
            @Secondary2DAxisTouch.canceled -= instance.OnSecondary2DAxisTouch;
            @PrimaryTouch.started -= instance.OnPrimaryTouch;
            @PrimaryTouch.performed -= instance.OnPrimaryTouch;
            @PrimaryTouch.canceled -= instance.OnPrimaryTouch;
            @SecondaryTouch.started -= instance.OnSecondaryTouch;
            @SecondaryTouch.performed -= instance.OnSecondaryTouch;
            @SecondaryTouch.canceled -= instance.OnSecondaryTouch;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="ControllerActions.UnregisterCallbacks(IControllerActions)" />.
        /// </summary>
        /// <seealso cref="ControllerActions.UnregisterCallbacks(IControllerActions)" />
        public void RemoveCallbacks(IControllerActions instance)
        {
            if (m_Wrapper.m_ControllerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="ControllerActions.AddCallbacks(IControllerActions)" />
        /// <seealso cref="ControllerActions.RemoveCallbacks(IControllerActions)" />
        /// <seealso cref="ControllerActions.UnregisterCallbacks(IControllerActions)" />
        public void SetCallbacks(IControllerActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="ControllerActions" /> instance referencing this action map.
    /// </summary>
    public ControllerActions @Controller => new ControllerActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Controller" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="ControllerActions.AddCallbacks(IControllerActions)" />
    /// <seealso cref="ControllerActions.RemoveCallbacks(IControllerActions)" />
    public interface IControllerActions
    {
        /// <summary>
        /// Method invoked when associated input action "Axis 2D" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAxis2D(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Resting Hand Axis 2D" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRestingHandAxis2D(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Grip" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnGrip(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Trigger" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnTrigger(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Primary Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPrimaryButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Secondary Button" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSecondaryButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Menu" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMenu(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Primary 2D Axis Click" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPrimary2DAxisClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Secondary 2D Axis Click" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSecondary2DAxisClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Primary 2D Axis Touch" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPrimary2DAxisTouch(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Secondary 2D Axis Touch" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSecondary2DAxisTouch(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Primary Touch" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPrimaryTouch(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Secondary Touch" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSecondaryTouch(InputAction.CallbackContext context);
    }
}
